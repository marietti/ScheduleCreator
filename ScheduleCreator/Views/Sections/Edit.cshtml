@model ScheduleCreator.Models.Section

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Section</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.section_id)

        <div class="form-group">
            @Html.LabelFor(model => model.course_id, "course_id", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("course_id", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.course_id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.classroom_id, "classroom_id", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select id="classroom_id" name="classroom_id" class="form-control">
                    <option value=""></option>
                    @foreach (SelectListItem item in ViewBag.classroom_id)
                    {
                        <option value=@item.Value>@item.Text</option>
                    }
                </select>
                @Html.ValidationMessageFor(model => model.classroom_id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.instructor_id, "instructor_id", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select id="instructor_id" name="instructor_id" class="form-control">
                    <option value=""></option>
                    @foreach (SelectListItem item in ViewBag.instructor_id)
                    {
                        <option value=@item.Value>@item.Text</option>
                    }
                </select>
                @Html.ValidationMessageFor(model => model.instructor_id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.semester_id, "semester_id", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select id="semester_id" name="semester_id" class="form-control">
                    <option value=""></option>
                    @foreach (SelectListItem item in ViewBag.semester_id)
                    {
                        <option value=@item.Value>@item.Text</option>
                    }
                </select>
                @Html.ValidationMessageFor(model => model.semester_id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.crn, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.crn, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.crn, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.daysTaught, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <label class="checkbox-inline"><input type="checkbox" name="dayChecks" value="M" checked="@(ViewBag.dayReCheck.FirstOrDefault() == true)" /> M</label>
                <label class="checkbox-inline"><input type="checkbox" name="dayChecks" value="T" checked="@(ViewBag.dayReCheck[1] == true)" /> T</label>
                <label class="checkbox-inline"><input type="checkbox" name="dayChecks" value="W" checked="@(ViewBag.dayReCheck[2] == true)" /> W</label>
                <label class="checkbox-inline"><input type="checkbox" name="dayChecks" value="R" checked="@(ViewBag.dayReCheck[3] == true)" /> R</label>
                <label class="checkbox-inline"><input type="checkbox" name="dayChecks" value="F" checked="@(ViewBag.dayReCheck[4] == true)" /> F</label>
                @Html.ValidationMessageFor(model => model.daysTaught, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.courseStartTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.courseStartTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.courseStartTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.courseEndTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.courseEndTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.courseEndTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.block, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("block", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.block, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.courseType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("courseType", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.courseType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.pay, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.pay, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.pay, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.sectionCapacity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.sectionCapacity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.sectionCapacity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.creditLoad, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.creditLoad, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.creditLoad, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.creditOverload, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.creditOverload, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.creditOverload, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.comments, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.comments, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.comments, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
